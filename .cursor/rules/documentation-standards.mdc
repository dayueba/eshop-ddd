---
description:
globs:
alwaysApply: false
---
# 文档规范

## 文档目录结构

### 主要文档位置
- 所有项目文档必须放在 `doc/` 目录下
- 配置文件（如 `.cursor/rules/`）不属于项目文档范畴
- 临时文件和构建产物不应包含在文档目录中

### 文档分类

#### 设计文档 (Design Documents)
位置：`doc/design/` 或 `doc/` 根目录
- 项目设计文档.md - 总体架构设计
- {模块名}模块设计文档.md - 具体模块设计
- 分步实现文档.md - 项目实施计划

#### 开发文档 (Development Documents)  
位置：`doc/development/` 或 `doc/` 根目录
- API文档 - 接口设计和使用说明
- 数据库设计文档 - 数据模型设计
- 部署文档 - 环境配置和部署指南

#### 用户文档 (User Documents)
位置：`doc/user/` 或 `doc/` 根目录  
- 快速启动指南.md - 用户入门指南
- 使用手册 - 详细功能说明
- FAQ - 常见问题解答

#### 进度文档 (Progress Documents)
位置：`doc/progress/` 或 `doc/` 根目录
- {模块名}实现进度.md - 模块开发状态
- 项目里程碑.md - 重要节点记录

## 文档命名规范

### 文件命名
- 使用中文名称，便于团队理解
- 文件名应简洁明确，体现文档内容
- 使用 `.md` 扩展名（Markdown格式）
- 避免特殊字符和空格，使用连字符分隔

### 示例
```
doc/
├── README.md                    # 文档导航
├── 项目设计文档.md              # 总体设计
├── 分步实现文档.md              # 实施计划
├── 快速启动指南.md              # 用户指南
├── 商品模块设计文档.md          # 模块设计
├── 订单模块设计文档.md          # 模块设计
└── 商品订单模块实现进度.md      # 进度跟踪
```

## 文档内容规范

### 文档结构
1. **标题** - 清晰的文档标题
2. **目录** - 复杂文档需要目录导航
3. **概述** - 简要说明文档目的和范围
4. **详细内容** - 按逻辑层次组织
5. **参考链接** - 相关文档和资源链接

### Markdown格式标准
```markdown
# 一级标题 - 文档主标题
## 二级标题 - 主要章节
### 三级标题 - 子章节
#### 四级标题 - 详细说明

- 无序列表项
  - 子列表项
  
1. 有序列表项
2. 有序列表项

`代码片段` 或 `文件名.ts`

```typescript
// 代码块
```

> 引用或重要提示

**粗体强调** 或 *斜体强调*
```

### 代码示例规范
- 代码块必须指定语言类型
- 提供完整的可运行示例
- 添加必要的注释说明
- 遵循项目编码规范

```typescript
// 正确示例：完整的类定义
export class User extends Entity<UserId> {
  private constructor(
    id: UserId,
    private email: Email,
    private password: Password
  ) {
    super(id);
  }
  
  // 业务逻辑方法...
}
```

### 链接规范
- 内部文档使用相对路径链接
- 外部资源使用完整URL
- 为链接提供描述性文字

```markdown
参考 [商品模块设计文档](./商品模块设计文档.md)
查看 [TypeScript官方文档](https://www.typescriptlang.org/docs/)
```

## 文档维护规范

### 版本控制
- 所有文档纳入Git版本控制
- 重要变更需要提交说明
- 定期审查和更新过时内容

### 更新时机
- 代码重构时同步更新设计文档
- 新功能开发前更新设计文档
- API变更时及时更新接口文档
- 发现问题时及时更新相关文档

### 质量要求
- 文档内容准确无误
- 语言简洁清晰
- 逻辑结构合理
- 格式统一规范

## 文档审查

### 自查清单
- [ ] 文档放置在正确的目录
- [ ] 文件命名符合规范
- [ ] 内容结构完整清晰
- [ ] 代码示例可以运行
- [ ] 链接地址正确有效
- [ ] Markdown格式正确

### 团队审查
- 重要设计文档需要团队评审
- 技术文档需要技术负责人确认
- 用户文档需要产品团队验证

## 特殊说明

### 配置文件文档
- `.cursor/rules/` 下的文件是开发工具配置，不属于项目文档
- 环境配置说明应放在 `doc/` 目录下
- 工具使用说明可以在 `doc/development/` 下创建

### 自动生成文档
- API文档可以通过 Swagger 自动生成
- 代码文档可以通过 TypeDoc 生成
- 自动生成的文档也应遵循目录规范

### 多语言支持
- 主要文档使用中文编写
- 必要时可以提供英文版本
- 多语言文档应保持内容同步
